{"version":3,"file":"index-3a8fa05d.js","sources":["../../src/script.js"],"sourcesContent":["document.getElementById(\"file-input\").addEventListener(\"change\", function () {\r\n  let fileName = this.files[0] ? this.files[0].name : \"No file chosen\";\r\n  document.getElementById(\"file-name\").textContent = fileName;\r\n});\r\n\r\ndocument.getElementById(\"upload-form\").onsubmit = async function (event) {\r\n  event.preventDefault();\r\n  let formData = new FormData(this);\r\n  \r\n  // clear result before uploading a new image\r\n  document.getElementById(\"result\").innerHTML = \"Processing...\";\r\n\r\n  let response = await fetch(\"/upload\", {\r\n    method: \"POST\",\r\n    body: formData,\r\n  });\r\n\r\n  let result = await response.json();\r\n  \r\n  if (result.error) {\r\n    alert(\"Error: \" + result.error);\r\n    return;\r\n  }\r\n\r\n  // processed image\r\n  document.getElementById(\"result\").innerHTML = `\r\n    <p>Number of faces detected: <strong>${result.num_faces}</strong></p>\r\n    <img width=\"500px\" src=\"${result.output_path}\" alt=\"Processed Image\" />\r\n  `;\r\n};\r\n\r\n// to show upload form and hide camera section\r\nfunction showUpload() {\r\n  document.getElementById(\"upload-form\").style.display = \"block\";\r\n  document.getElementById(\"camera-section\").style.display = \"none\";\r\n\r\n  // clear result when switching to upload mode\r\n  document.getElementById(\"result\").innerHTML = \"\";\r\n}\r\n\r\n// to show camera section and request camera access\r\nasync function showCamera() {\r\n  document.getElementById(\"upload-form\").style.display = \"none\";\r\n  document.getElementById(\"camera-section\").style.display = \"block\";\r\n\r\n  // clear results when switching to camera mode\r\n  document.getElementById(\"result\").innerHTML = \"\";\r\n\r\n  let video = document.getElementById(\"video\");\r\n\r\n  // one video stream active\r\n  if (video.srcObject) {\r\n    video.srcObject.getTracks().forEach(track => track.stop());\r\n  }\r\n\r\n  try {\r\n    // request camera access\r\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n    video.srcObject = stream;\r\n    video.play();\r\n  } catch (error) {\r\n    console.error(\"Camera access denied: \", error);\r\n    alert(\"⚠️ Camera access was denied. Please allow it in browser settings.\");\r\n  }\r\n}\r\n\r\n// capture photo from video stream and send to backend\r\ndocument.getElementById(\"capture-btn\").addEventListener(\"click\", function () {\r\n  let video = document.getElementById(\"video\");\r\n  let canvas = document.getElementById(\"canvas\");\r\n  let context = canvas.getContext(\"2d\");\r\n\r\n  canvas.width = video.videoWidth;\r\n  canvas.height = video.videoHeight;\r\n\r\n  // draw the video frame on the canvas\r\n  context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n  // convert canvas to image blob\r\n  canvas.toBlob((blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", blob, \"captured-image.png\");\r\n\r\n    // clear result before sending new image\r\n    document.getElementById(\"result\").innerHTML = \"Processing...\";\r\n\r\n    // send captured image to backend\r\n    fetch(\"/upload\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result.error) {\r\n          alert(\"Error: \" + result.error);\r\n          return;\r\n        }\r\n\r\n        document.getElementById(\"result\").innerHTML = \"\";\r\n\r\n        let img = document.createElement(\"img\");\r\n        img.src = result.output_path + \"?t=\" + new Date().getTime();\r\n        img.alt = \"Processed Image\";\r\n        img.width = 500;\r\n\r\n        let faceCount = document.createElement(\"p\");\r\n        faceCount.innerHTML = `Number of faces detected: <strong>${result.num_faces}</strong>`;\r\n\r\n        document.getElementById(\"result\").appendChild(faceCount);\r\n        document.getElementById(\"result\").appendChild(img);\r\n    })\r\n    .catch((error) => console.error(\"Error:\", error));\r\n}, \"image/png\");\r\n});\r\n"],"names":["fileName","event","formData","result","video","canvas","context","blob","response","img","faceCount","error"],"mappings":"ssBAAA,SAAS,eAAe,YAAY,EAAE,iBAAiB,SAAU,UAAY,CAC3E,IAAIA,EAAW,KAAK,MAAM,CAAC,EAAI,KAAK,MAAM,CAAC,EAAE,KAAO,iBACpD,SAAS,eAAe,WAAW,EAAE,YAAcA,CACrD,CAAC,EAED,SAAS,eAAe,aAAa,EAAE,SAAW,eAAgBC,EAAO,CACvEA,EAAM,eAAc,EACpB,IAAIC,EAAW,IAAI,SAAS,IAAI,EAGhC,SAAS,eAAe,QAAQ,EAAE,UAAY,gBAO9C,IAAIC,EAAS,MALE,MAAM,MAAM,UAAW,CACpC,OAAQ,OACR,KAAMD,CACV,CAAG,GAE2B,OAE5B,GAAIC,EAAO,MAAO,CAChB,MAAM,UAAYA,EAAO,KAAK,EAC9B,MACD,CAGD,SAAS,eAAe,QAAQ,EAAE,UAAY;AAAA,2CACLA,EAAO,SAAS;AAAA,8BAC7BA,EAAO,WAAW;AAAA,GAEhD,EAsCA,SAAS,eAAe,aAAa,EAAE,iBAAiB,QAAS,UAAY,CAC3E,IAAIC,EAAQ,SAAS,eAAe,OAAO,EACvCC,EAAS,SAAS,eAAe,QAAQ,EACzCC,EAAUD,EAAO,WAAW,IAAI,EAEpCA,EAAO,MAAQD,EAAM,WACrBC,EAAO,OAASD,EAAM,YAGtBE,EAAQ,UAAUF,EAAO,EAAG,EAAGC,EAAO,MAAOA,EAAO,MAAM,EAG1DA,EAAO,OAAQE,GAAS,CACtB,IAAIL,EAAW,IAAI,SACnBA,EAAS,OAAO,OAAQK,EAAM,oBAAoB,EAGlD,SAAS,eAAe,QAAQ,EAAE,UAAY,gBAG9C,MAAM,UAAW,CACf,OAAQ,OACR,KAAML,CACZ,CAAK,EACE,KAAMM,GAAaA,EAAS,KAAI,CAAE,EAClC,KAAML,GAAW,CAChB,GAAIA,EAAO,MAAO,CAChB,MAAM,UAAYA,EAAO,KAAK,EAC9B,MACD,CAED,SAAS,eAAe,QAAQ,EAAE,UAAY,GAE9C,IAAIM,EAAM,SAAS,cAAc,KAAK,EACtCA,EAAI,IAAMN,EAAO,YAAc,MAAQ,IAAI,KAAI,EAAG,UAClDM,EAAI,IAAM,kBACVA,EAAI,MAAQ,IAEZ,IAAIC,EAAY,SAAS,cAAc,GAAG,EAC1CA,EAAU,UAAY,qCAAqCP,EAAO,SAAS,YAE3E,SAAS,eAAe,QAAQ,EAAE,YAAYO,CAAS,EACvD,SAAS,eAAe,QAAQ,EAAE,YAAYD,CAAG,CACzD,CAAK,EACA,MAAOE,GAAU,QAAQ,MAAM,SAAUA,CAAK,CAAC,CACpD,EAAG,WAAW,CACd,CAAC"}